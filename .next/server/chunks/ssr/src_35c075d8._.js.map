{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/projects/devstore/src/env.ts"],"sourcesContent":["import { z } from \"zod\";\r\n\r\nconst envSchema = z.object({\r\n  NEXT_PUBLIC_API_BASE_URL: z.string().url(),\r\n  APP_URL: z.string().url(),\r\n});\r\n\r\nconst parsedEnv = envSchema.safeParse(process.env);\r\n\r\nif (!parsedEnv.success) {\r\n  console.error(\r\n    \"Invalid environment variables\",\r\n    parsedEnv.error.flatten().fieldErrors\r\n  );\r\n\r\n  throw new Error(\"Invalid environment variables\");\r\n}\r\n\r\nexport const env = parsedEnv.data;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,YAAY,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzB,0BAA0B,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG;IACxC,SAAS,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG;AACzB;AAEA,MAAM,YAAY,UAAU,SAAS,CAAC,QAAQ,GAAG;AAEjD,IAAI,CAAC,UAAU,OAAO,EAAE;IACtB,QAAQ,KAAK,CACX,iCACA,UAAU,KAAK,CAAC,OAAO,GAAG,WAAW;IAGvC,MAAM,IAAI,MAAM;AAClB;AAEO,MAAM,MAAM,UAAU,IAAI","debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file://C%3A/projects/devstore/src/data/api.ts"],"sourcesContent":["import { env } from \"@/env\";\r\n\r\nexport function api(path: string, init?: RequestInit) {\r\n  const baseUrl = env.NEXT_PUBLIC_API_BASE_URL;\r\n  \r\n  const url = new URL(`/api/${path}`, baseUrl);\r\n\r\n  return fetch(url, init);\r\n}\r\n\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,SAAS,IAAI,IAAY,EAAE,IAAkB;IAClD,MAAM,UAAU,0GAAA,CAAA,MAAG,CAAC,wBAAwB;IAE5C,MAAM,MAAM,IAAI,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE;IAEpC,OAAO,MAAM,KAAK;AACpB","debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file://C%3A/projects/devstore/src/app/%28store%29/product/%5Bslug%5D/opengraph-image.tsx"],"sourcesContent":["import { api } from \"@/data/api\";\r\nimport { Product } from \"@/data/types/product\";\r\nimport { env } from \"@/env\";\r\nimport { ImageResponse } from \"next/og\";\r\n\r\nexport const alt = \"About Acme\";\r\nexport const size = {\r\n  width: 1200,\r\n  height: 630,\r\n};\r\n\r\nexport const contentType = \"image/png\";\r\n\r\nasync function getProduct(slug: string): Promise<Product | null> {\r\n  try {\r\n    const response = await api(`/products/${slug}`, {\r\n      next: { revalidate: 60 * 60 },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      console.error(`Erro ao buscar o produto: ${response.status}`);\r\n      return null;\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Erro ao buscar o produto:\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default async function OgImage({\r\n  params,\r\n}: {\r\n  params: { slug: string };\r\n}) {\r\n  const product = await getProduct(params.slug);\r\n\r\n  if (!product) {\r\n    return new Response(\"Produto não encontrado\", { status: 404 });\r\n  }\r\n\r\n  if (!product.image) {\r\n    console.error(\"Imagem do produto não encontrada:\", product);\r\n    return new Response(\"Imagem não disponível\", { status: 404 });\r\n  }\r\n\r\n  const productImageURL = new URL(product.image, env.APP_URL).toString();\r\n\r\n  return new ImageResponse(\r\n    (\r\n      <div\r\n        style={{\r\n          background: \"#18181b\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <img src={productImageURL} alt=\"\" style={{ width: \"100%\" }} />\r\n      </div>\r\n    ),\r\n    size\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;AAAA;AAEA;AACA;;;;;AAEO,MAAM,MAAM;AACZ,MAAM,OAAO;IAClB,OAAO;IACP,QAAQ;AACV;AAEO,MAAM,cAAc;AAE3B,eAAe,WAAW,IAAY;IACpC,IAAI;QACF,MAAM,WAAW,MAAM,CAAA,GAAA,kHAAA,CAAA,MAAG,AAAD,EAAE,CAAC,UAAU,EAAE,MAAM,EAAE;YAC9C,MAAM;gBAAE,YAAY,KAAK;YAAG;QAC9B;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,QAAQ,KAAK,CAAC,CAAC,0BAA0B,EAAE,SAAS,MAAM,EAAE;YAC5D,OAAO;QACT;QAEA,OAAO,MAAM,SAAS,IAAI;IAC5B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO;IACT;AACF;AAEe,eAAe,QAAQ,EACpC,MAAM,EAGP;IACC,MAAM,UAAU,MAAM,WAAW,OAAO,IAAI;IAE5C,IAAI,CAAC,SAAS;QACZ,OAAO,IAAI,SAAS,0BAA0B;YAAE,QAAQ;QAAI;IAC9D;IAEA,IAAI,CAAC,QAAQ,KAAK,EAAE;QAClB,QAAQ,KAAK,CAAC,qCAAqC;QACnD,OAAO,IAAI,SAAS,yBAAyB;YAAE,QAAQ;QAAI;IAC7D;IAEA,MAAM,kBAAkB,IAAI,IAAI,QAAQ,KAAK,EAAE,0GAAA,CAAA,MAAG,CAAC,OAAO,EAAE,QAAQ;IAEpE,OAAO,IAAI,0HAAA,CAAA,gBAAa,eAEpB,8OAAC;QACC,OAAO;YACL,YAAY;YACZ,OAAO;YACP,QAAQ;YACR,SAAS;YACT,eAAe;QACjB;kBAEA,cAAA,8OAAC;YAAI,KAAK;YAAiB,KAAI;YAAG,OAAO;gBAAE,OAAO;YAAO;;;;;;;;;;cAG7D;AAEJ","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file://C%3A/projects/devstore/src/app/%28store%29/product/%5Bslug%5D/opengraph-image--metadata.js"],"sourcesContent":["import { alt, contentType, size } from \"./opengraph-image.tsx\"\nimport { fillMetadataSegment } from 'next/dist/lib/metadata/get-metadata-route'\n\nconst imageModule = { alt, contentType, size }\n\nexport default async function (props) {\n    const { __metadata_id__: _, ...params } = await props.params\n    const imageUrl = fillMetadataSegment(\"/(store)/product/[slug]\", params, \"opengraph-image\")\n\n    const { generateImageMetadata } = imageModule\n\n    function getImageMetadata(imageMetadata, idParam) {\n        const data = {\n            alt: imageMetadata.alt,\n            type: imageMetadata.contentType || 'image/png',\n            url: imageUrl + (idParam ? ('/' + idParam) : '') + \"?db66585cbd0ee529\",\n        }\n        const { size } = imageMetadata\n        if (size) {\n            data.width = size.width; data.height = size.height;\n        }\n        return data\n    }\n\n    if (generateImageMetadata) {\n        const imageMetadataArray = await generateImageMetadata({ params })\n        return imageMetadataArray.map((imageMetadata, index) => {\n            const idParam = (imageMetadata.id || index) + ''\n            return getImageMetadata(imageMetadata, idParam)\n        })\n    } else {\n        return [getImageMetadata(imageModule, '')]\n    }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,cAAc;IAAE,KAAA,qKAAA,CAAA,MAAG;IAAE,aAAA,qKAAA,CAAA,cAAW;IAAE,MAAA,qKAAA,CAAA,OAAI;AAAC;AAE9B,8CAAgB,KAAK;IAChC,MAAM,EAAE,iBAAiB,CAAC,EAAE,GAAG,QAAQ,GAAG,MAAM,MAAM,MAAM;IAC5D,MAAM,WAAW,CAAA,GAAA,2KAAA,CAAA,sBAAmB,AAAD,EAAE,2BAA2B,QAAQ;IAExE,MAAM,EAAE,qBAAqB,EAAE,GAAG;IAElC,SAAS,iBAAiB,aAAa,EAAE,OAAO;QAC5C,MAAM,OAAO;YACT,KAAK,cAAc,GAAG;YACtB,MAAM,cAAc,WAAW,IAAI;YACnC,KAAK,WAAW,CAAC,UAAW,MAAM,UAAW,EAAE,IAAI;QACvD;QACA,MAAM,EAAE,IAAI,EAAE,GAAG;QACjB,IAAI,MAAM;YACN,KAAK,KAAK,GAAG,KAAK,KAAK;YAAE,KAAK,MAAM,GAAG,KAAK,MAAM;QACtD;QACA,OAAO;IACX;IAEA,IAAI,uBAAuB;QACvB,MAAM,qBAAqB,MAAM,sBAAsB;YAAE;QAAO;QAChE,OAAO,mBAAmB,GAAG,CAAC,CAAC,eAAe;YAC1C,MAAM,UAAU,CAAC,cAAc,EAAE,IAAI,KAAK,IAAI;YAC9C,OAAO,iBAAiB,eAAe;QAC3C;IACJ,OAAO;QACH,OAAO;YAAC,iBAAiB,aAAa;SAAI;IAC9C;AACJ","debugId":null}}]
}